---
title: ""
author: ""
format:
  pdf:
    cap-location: "top"
    keep-tex: true
    fig-pos: 'H'
    document:
      tables:
        float: false
    extra_dependencies: ["pdfpages", "float"]  
    documentclass: article
    latex-engine: xelatex
    toc: false
    toc-depth: 3
    toc-title: "Índice"
    mainfont: "Aptos"
fontsize: 11pt
lang: es
header-includes:
  - \usepackage{pdfpages}  
  - \usepackage{fontspec}
  - \usepackage[bottom]{footmisc} 
  - \setmainfont{Aptos}[Path="C:/Users/ginow/AppData/Roaming/TinyTeX/texmf-dist/fonts/truetype/aptos/", Extension=".ttf"]
  - \usepackage{fancyhdr}
  - \pagestyle{fancy}
  - \fancyhf{}
  - |
    \fancyhead[C]{\makebox[\textwidth]{\hspace*{-1cm}\includegraphics[height=1.9cm]{../Logotipo ENADEL/encabezado_izquierda.png} \hfill \includegraphics[height=1.5cm]{../Logotipo ENADEL/encabezado_derecha.png} \hspace*{-2cm}}}
  - \fancyfoot[L]{Subsecretaría del Trabajo}
  - \cfoot{\thepage}
  - \setlength{\footskip}{10pt}
  - \setlength{\skip\footins}{15pt} 
  - \setlength{\headheight}{3cm}  # ajusta según sea necesario
  - \setlength{\headsep}{0.5cm}  # distancia del encabezado al cuerpo del texto
  - \renewcommand{\footrulewidth}{0pt} 
  - \floatplacement{figure}{H}
  - \floatplacement{table}{H}
  - \usepackage{geometry}
  - \geometry{
      left=3cm,
      right=3cm,
      top=2.5cm,
      bottom=2.5cm
    }
  - \usepackage{placeins}
  - \usepackage{ragged2e}
  - \usepackage{float}
  - \usepackage{setspace}
  - \renewcommand{\familydefault}{\sfdefault}
  - \AtBeginDocument{\renewcommand{\baselinestretch}{1.5}\justifying}
  - \usepackage{xcolor}
  - \usepackage{pagecolor}
include-before-body: "portada.tex"
---
\newpage

\thispagestyle{empty} 

 

::: titlingpage
\centering
\includegraphics[width=0.5\textwidth]{../Logotipo ENADEL/logotipo-ENADEL-2023.png} \vspace{2cm}
:::

\noindent
Ministerio del Trabajo y Previsión Social

División de Políticas de Empleo\\
Subsecretaría del Trabajo



\justifying
El presente documento analiza los resultados de la Encuesta Nacional de Demanda Laboral (ENADEL) 2023, que busca identificar y caracterizar el capital humano requerido por las empresas de los distintos sectores productivos del país, generando información sobre la demanda actual de ocupaciones de las empresas, detectando requisitos y problemas de contratación. Al igual que versiones anteriores de esta encuesta, se puso el foco en dos sectores de actividad económica: Construcción y el sector Agrícola.






\newpage
\renewcommand{\contentsname}{Índice} 
\tableofcontents

\newpage



 
## Descripción General: Empresas y Trabajadores



```{r eval=TRUE, echo=FALSE, error=FALSE, message=FALSE, warning=FALSE, results='asis', fig.align = 'center'}

#Cargar paquetes
pacman::p_load(tidyverse,#universo de paquetes
               haven,# leer archivos stata y spss
               stargazer,# tablas de regresión??
              kableExtra,#Tablas fancy
              scales,#escala porcentaje 
              patchwork,#Combinar gráficos
              bookdown,#Referencias
              showtext,#fuente
              sysfonts,#habilitar fuentes
              forcats)

        

options(OutDec = ",")

#Cargar tablas


porc_region <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "pc_region")


  orden_regiones <- c(
    "Arica y Parinacota", "Tarapacá", "Antofagasta", "Atacama", 
    "Coquimbo", "Valparaíso", "Metropolitana", "O'Higgins", 
    "Maule", "Ñuble", "Biobío", "Araucanía", 
    "Los Ríos", "Los Lagos", "Aysén", "Magallanes"
  )

porc_region<- porc_region %>% select(-c("region","empresas", "trabajadores")) 

porc_region <- round(porc_region*100, 1)
rownames(porc_region)<- orden_regiones


```
La muestra de ENADEL 2023 encuesta a 5.820 empresas que suman 485.256 trabajadores (a nivel muestral). Estas representan a 82.052 empresas y 5.611.196 trabajadores a nivel nacional. La @tbl-region muestra  la distribución en las distintas regiones del país, dónde un `r round(porc_region[7, 1],1 )`% de las empresas y un `r round(porc_region[7, 2],1)`% de los trabajadores se encuentran en la región Metropolitana.

\vspace{5mm}

\FloatBarrier
```{r, results='asis'}
#| label: tbl-region
#| tbl-cap: "Resultados de la encuesta" 
#| echo: false
#| error: false
#| message: false
#| warning: false

porc_region <- porc_region %>% mutate(pc_empresas = paste0(pc_empresas, "%"),
                                      pc_trabajadores = paste0(pc_trabajadores, "%"))

# Generar la tabla con kable
kable(porc_region,
      col.names = c("Región", "% Empresas", "% Trabajadores"),
      format = "latex",
      booktabs = TRUE) %>%
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(1, width = "6cm") %>%
  column_spec(2, width = "3cm") %>%
  column_spec(3, width = "3cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
           general_title= "")


```
\FloatBarrier

La @fig-combined muestra el porcentaje de empresas y trabajadores según tamaño de empresas, utilizando la clasificación por número de trabajadores, cómo por volumen de venta. Con respecto a la primera clasificación, el 74,6% de las empresas tiene menos de 50 trabajadores –acumulando un 23,8% del total– y casi el 50% de los trabajadores están en empresas grandes –que corresponden a un 6,5% del total. Si se analiza según tamaño de ventas, más de la mitad de las empresas tienen un volumen de venta de entre 2.400 y 24.999 UF (“Pequeñas”) y más de un cuarto venden entre 25.000 y 100.000 UF al año (“Mediana”). Sin embargo, casi un tercio de los trabajadores están en empresas grandes (más de 100.000 UF).

\FloatBarrier
```{r, fig.cap="Gráfico combinado de resultados", out.width='100%', fig.align='center', fig.pos='H'}
#| label: fig-combined
#| fig-cap: "Gráfico combinado de resultados"
#| echo: false
#| fig-align: center
#| error: false
#| message: false
#| warning: false


pc_tam<- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "pc_tam")

pc_tamvent<- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "pc_tamvent")

#Agregar Aptos
#font_add(family = "Aptos", regular = "C:/Windows/Fonts/APTOS.TTF")
#habilitar para ggplot
showtext_auto()

#Gráfico de tamaño según n° de trabajadores----

# Transformar los datos al formato largo para ggplot
df_long <- pc_tam %>%
  pivot_longer(cols = starts_with("pc_"), names_to = "tipo", values_to = "porcentaje")
# Cambiar nombres
df_long$tipo <- recode(df_long$tipo, "pc_empresas" = "Empresas", "pc_trabajadores" = "Trabajadores")

# Gráfico de barras
graf_tam<-ggplot(df_long, aes(x = tipo, y = porcentaje, fill = factor(tam_label, levels = c("Pequeña", "Mediana", "Grande")))) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.5), width = 0.4) +#gráfico de barras
  scale_fill_manual(values = c("Pequeña" = "#e36444", "Mediana" = "#c36c9b", "Grande" = "#35638c")) +#color de leyendas
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 1)),#valor de etiquetas
            position = position_dodge(width = 0.5), vjust = -0.5, size = 2.3) +#posición de las etiquetas
   scale_y_continuous(labels = scales::percent, limits = c(0, 0.8)) + #eje y
  labs(title = "Según N° de trabajadores",
       x = NULL,
       y = NULL,
       fill = "") +
  ¬



#Gráfico de tamaño según n° de ventas----

# Transformar los datos al formato largo para ggplot
df_long <- pc_tamvent %>%
  pivot_longer(cols = starts_with("pc_"), names_to = "tipo", values_to = "porcentaje")
# Cambiar nombres
df_long$tipo <- recode(df_long$tipo, "pc_empresas" = "Empresas", "pc_trabajadores" = "Trabajadores")

# Asignar etiquetas a la variable tam_vent
df_long$tam_vent <- factor(df_long$tam_vent, 
                           levels = c(0, 1, 2, 3, 4), 
                           labels = c("Sin ventas", "Micro", "Pequeña", "Mediana", "Grande"))

# Gráfico de barras
graf_tamvent<-ggplot(df_long, aes(x = tipo, y = porcentaje, fill = factor(tam_vent, levels = c("Sin ventas","Micro","Pequeña", "Mediana", "Grande")))) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +#gráfico de barras
  scale_fill_manual(values = c("Sin ventas"= "#bb1c42","Micro"="#f4bb54","Pequeña" = "#e36444", "Mediana" = "#c36c9b", "Grande" = "#35638c")) +#color de leyendas
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 1)),#valor de etiquetas
            position = position_dodge(width = 0.7), vjust = -0.5, size = 2.3) +#posición de las etiquetas
   scale_y_continuous(labels = scales::percent, limits = c(0, 0.8)) + #eje y
  labs(title = "Según tamaño de ventas",
       x = NULL,
       y = NULL,
       fill="") +
  theme_minimal(base_family = "Aptos")+
  theme(axis.text.x = element_text(size = 6),
        axis.text.y = element_text(size = 6),
        plot.title = element_text(hjust = 0.5, size = 7.5),
        legend.position = "bottom",
        legend.title = element_text(size = 5), # Ajustar el tamaño del título de la leyenda
    legend.text = element_text(size = 5.5)    # Ajustar el tamaño del texto de las etiquetas de la leyenda
  ) +
  guides(
    fill = guide_legend(nrow = 2) # Configurar la leyenda para tener 2 filas
  )

#Combinar gráficos
graf_combined <- graf_tam + graf_tamvent +
  plot_layout(ncol = 2) +  # Configurar para que los gráficos estén en 2 columnas (lado a lado)
  plot_annotation(
    caption = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
    theme = theme(plot.title = element_text(family = "Aptos", size = 14, face = "bold"),
      plot.caption = element_text(family = "Aptos", hjust = 0, size = 7.5))
  )

graf_combined


```
\FloatBarrier



```{r, results='asis'}
#| echo: false
#| error: false
#| message: false
#| warning: false

porc_acteco <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "pc_acteco") %>% select(-c("act_eco","empresas", "trabajadores"))

porc_acteco <- round(porc_acteco*100, 1)

porc_acteco <- porc_acteco %>% arrange(desc(pc_trabajadores))

orden_acteco <-c("Comercio", "Construcción", "Servicios administrativos y de apoyo", 
  "Industria manufacturera", "Actividades profesionales", "Silvoagropecuario", 
  "Transporte y almacenamiento", "Administración pública", "Alojamiento y de servicio de comidas", 
  "Información y comunicaciones", "Actividades inmobiliarias", "Actividades financieras y de seguros", 
  "Pesca y acuicultura")

rownames(porc_acteco)<- orden_acteco

```

Al revisar la distribución por sector de actividad económica @tbl-acteco se tiene que una de cada cinco empresas pertenece al sector de Comercio, seguido por el sector Construcción (`r round(porc_acteco[2,1], 1)`%) y el sector de Industrias Manufactureras (11,4%). Con respecto al volumen de trabajadores, el sector Comercio también lidera (17,8%) seguido por el sector Construcción (14,4%) y el sector de Servicios Administrativos y de Apoyo que, siendo sector intensivo en trabajo, un 9,1% de las empresas acumula el 13,5% de trabajadores y trabajadoras.

\FloatBarrier
```{r, results='asis'}
#| label: tbl-acteco
#| tbl-cap: "Empresas y trabajadores según sector de actividad económica" 
#| echo: false
#| error: false
#| message: false
#| warning: false


porc_acteco <- porc_acteco %>% mutate(pc_empresas = paste0(pc_empresas, "%"),
                                      pc_trabajadores = paste0(pc_trabajadores, "%"))



# Generar la tabla con kable
kable(porc_acteco,
      col.names = c("Actividad Económica", "% Empresas", "% Trabajadores"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>% 
  column_spec(1, width = "11cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 




```
\FloatBarrier



## Contratados en los últimos 12 meses
```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

contratos_totales <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "contratos_totales") 

contratos_totales<- contratos_totales %>% mutate(Si= round((convacu12_1/tot_empresas)*100,1),
                                                 No= round((convacu12_2/tot_empresas)*100,1))
contratos_totales<- contratos_totales %>%select(c( "sector_label","Si", "No"))

# Cambiar el orden de las columnas
contratos_totales <- contratos_totales %>% select("sector_label","Si", "No") %>% 
  rename("Sector Actividad Económica" = sector_label) 



total <- contratos_totales %>%summarise(`Sector Actividad Económica` = "Total",
                                         Si = round(mean(Si),1),
                                         No =round (mean(No),1))



# Unir la fila de totales a la tabla original
contratos_totales <- bind_rows(contratos_totales, total) 
 

```

El 87,1% de las empresas declaró que sí contrató personas nuevas durante los últimos 12 meses, mientras que el 12,9% declara que no contrató personas nuevas durante el mismo período. La @tbl-contratos_totales muestra la proporción de empresas, según sector de actividad económica, que tuvieron contrataciones nuevas durante los últimos 12 meses. El `r round(contratos_totales[12,2],1)`%  de las empresas del sector de pesca y acuicultura respondieron afirmativamente, mientras que el sector con menor proporción fue el de Actividades Inmobiliarias, dónde el 24,9% de firmas no tuvieron contrataciones durante los últimos 12 meses.

\FloatBarrier
```{r}
#| label: tbl-contratos_totales
#| tbl-cap: "Porcentaje de empresas que contrataron en los últimos 12 meses por sector económico" 
#| echo: false
#| error: false
#| message: false
#| warning: false

contratos_totales <- contratos_totales %>% mutate(Si = paste0(Si, "%"),
                                      No = paste0(No, "%"))

# Generar la tabla con kable
kable(contratos_totales,
      col.names = c("Actividad Económica", "% Si", "% No"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(1, width = "11cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 
  #kable_styling(latex_options = c("hold_position"))
                                                
```

\FloatBarrier

### Contrataciones por ocupación

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

contratados_u12 <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "contratados_u12") 

contratados_u12<- contratados_u12 %>% filter(cv<0.20) %>% arrange(desc(contratadosu12)) %>% head(.,11)

contratados_u12<- contratados_u12 %>% mutate(contratadosu12= round((contratadosu12),0),
                                                 cv= round((cv)*100,1))

contratados_u12<- contratados_u12 %>%select(c("oficio4", "oficio_label","contratadosu12", "cv"))%>% rename("CIUO 08" = oficio4,
                                              "Glosa"=oficio_label,
                                              "Contratados"=contratadosu12,
                                              "CV"=cv
                                              )

# Cambiar nombres de las columnas
#contratados_u12 <- contratados_u12 


```
Se contrataron cargos^[Contrataciones señaladas para los módulos de “Directores y gerentes”, “Jefatura/ADP”, “Ocupaciones Elementales” y “Otros Cargos”.] nuevos en 354 ocupaciones (representando a 1.206.992 contrataciones totales en los últimos 12 meses, cv = 6,8%), sin embargo, la @tbl-contratados_u12 sólo muestra aquellas para las cuáles el coeficiente de variación es menor a 20%^[La convención es considerar cómo robustas estimaciones con un cv menor al 15%. Dado que estas son pocas, se presentan todas las ocupaciones con un cv menor a 20%.].
Las ocupaciones con más contratos en los últimos 12 meses fueron "`r contratados_u12[1,2]`", "`r contratados_u12[2,2]`"  y "`r contratados_u12[3,2]`".

```{r}
#| label: tbl-contratados_u12
#| tbl-cap: "Contratados últimos 12 meses, por ocupación." 
#| echo: false
#| error: false
#| message: false
#| warning: false


contratados_u12 <- contratados_u12 %>% mutate(CV = paste0(CV, "%"))

# Generar la tabla con kable
kable(contratados_u12,
      col.names = c("CIUO_08", "Glosa", "Contratados", "cv"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(1, width = "1.2cm") %>%
  column_spec(2, width = "11cm") %>% 
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 
                                                
```

\newpage

### Contrataciones por ocupación: Sector Construcción


```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

contratados_u12_constru <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "contratados_u12_constr") 

contratados_u12_constru<- contratados_u12_constru %>% 
  mutate(contratados_u12= round(contratadosu12/sum(contratadosu12)*100,1)) %>% 
  arrange(desc(contratadosu12)) %>% select("cargo","contratados_u12")

```

En el módulo del sector Construcción se consulta sobre las contrataciones de 25 cargos específicos, con un total de 365.712 contrataciones en los últimos 12 meses (cv=29,2%). La @tbl-contratados_u12_constru muestra la proporción de contratados por cargo, con respecto al total de este módulo. El cargo de "`r contratados_u12_constru[1,1]`"  es el que concentra la mayor cantidad de contrataciones, seguido por "`r contratados_u12_constru[2,1]`" y por "`r contratados_u12_constru[3,1]`".
```{r}
#| label: tbl-contratados_u12_constru
#| tbl-cap: "Proporción de contrataciones por ocupación, sector construcción." 
#| echo: false
#| error: false
#| message: false
#| warning: false

contratados_u12_constru<- contratados_u12_constru %>% mutate(contratados_u12= paste0(contratados_u12, "%"))


# Generar la tabla con kable
kable(contratados_u12_constru,
      col.names = c("Cargo Construcción", "%"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(1, width = "12cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 
                                                
```


### Contrataciones por ocupación: Sector Agrícola

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

contratados_u12_agricola <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "contratados_u12_agro") 

contratados_u12_agricola<- contratados_u12_agricola %>% 
  mutate(contratados_u12= round(contratadosu12/sum(contratadosu12)*100,1)) %>% 
  arrange(desc(contratadosu12)) %>% select("cargo","contratados_u12")
```

En el módulo del sector Agrícola se consulta sobre las contrataciones de 15 cargos específicos, con un total de 321.395 contrataciones en los últimos 12 meses (cv=21,6%), cuya distribución en los distintos cargos se muestra en la @tbl-contratados_u12_agricola. Las ocupaciones de "`r contratados_u12_agricola[1,1]`" y "`r contratados_u12_agricola[2,1]`" son las que lideran las contrataciones durante los últimos 12 meses.


```{r}
#| label: tbl-contratados_u12_agricola
#| tbl-cap: "Proporción de contrataciones por ocupación, sector agrícola" 
#| echo: false
#| error: false
#| message: false
#| warning: false

contratados_u12_agricola<- contratados_u12_agricola %>% mutate(contratados_u12= paste0(contratados_u12, "%"))


# Generar la tabla con kable
kable(contratados_u12_agricola,
      col.names = c("Cargo Agrícola", "%"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 
```
## Vacantes en los últimos 12 meses



```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

vacantes_totales_sector <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "vacantes_totales_sector") 

#Recodificación
vacantes_totales_sector<- vacantes_totales_sector %>% 
  mutate(Si= round(vacnollen_1/tot_empresas*100,1),
         No=round(vacnollen_2/tot_empresas*100,1),
         a2=case_when(a2==1~"Actividades profesionales",
                      a2==2~"Actividades financieras y de seguros",
                      a2==3~"Actividades inmobiliarias",
                      a2==4~"Administración pública",
                      a2==5~"Alojamiento y de servicio de comidas",
                      a2==6~"Comercio",
                      a2==7~"Construcción",
                      a2==8~"Industria manufacturera",
                      a2==9~"Información y comunicaciones",
                      a2==10 ~"Servicios administrativos y de apoyo",
                      a2==11 ~"Silvoagropecuario",
                      a2==12 ~"Pesca y acuicultura",
                      a2==13 ~"Transporte y almacenamiento")) %>% 
  arrange(desc(Si)) %>% select("a2","Si","No")

```
El 72,05% de las empresas declaró que sí tuvo vacantes no llenadas durante los últimos 12 meses, mientras que el 27,95% declara que no tuvo vacantes no llenadas durante el mismo período.

La @tbl-vacantes_totales_sector muestra la proporción de empresas, según sector de actividad económica, que tuvieron vacantes no llenadas durante los últimos 12 meses. El `r vacantes_totales_sector[1,2]`%  de las empresas del sector de "`r vacantes_totales_sector[1,1]`"  tuvieron vacantes no llenadas, lo mismo ocurre con el `r vacantes_totales_sector[2,2]`%  de las personas jurídicas del sector de "`r vacantes_totales_sector[2,1]`"  y el `r vacantes_totales_sector[3,2]`%  del sector de "`r vacantes_totales_sector[3,1]`". Por otro lado, el sector de actividad económica con un menor porcentaje de empresas que tuvieron vacantes no llenadas fue el "`r vacantes_totales_sector[13,1]`".

```{r}
#| label: tbl-vacantes_totales_sector
#| tbl-cap: "Porcentaje de empresas con vacantes no cubiertas"
#| echo: false
#| error: false
#| message: false
#| warning: false

vacantes_totales_sector<- vacantes_totales_sector %>% mutate(Si= paste0(Si, "%"),
                                                             No= paste0(No, "%"))


# Generar la tabla con kable
kable(vacantes_totales_sector,
      col.names = c("Sector Actividad Económica", "% Sí", "% No"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(1, width = "10cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 
```

Durante el resto de esta sección se hará referencia a las ocupaciones que tengan vacantes sin llenar durante los últimos 12 meses como **ocupaciones de difícil cobertura**.

\newpage

### Ocupaciones de difícil cobertura

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

cuadro8_odc <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "cuadro8_odc") 


cuadro8_odc <- cuadro8_odc %>% filter(cv<0.4 & cv!=0) %>% 
  filter(n_region==0) %>% 
  mutate(vacantesu12=round(vacantesu12,0),
         cv=round(cv*100,1)) %>% 
  arrange(desc(vacantesu12)) %>% 
  select(oficio4,oficio_label, vacantesu12, cv)



```

Se declararon vacantes^[Vacantes señaladas para los módulos de “Directores y gerentes”, “Jefatura/ADP”, “Ocupaciones Elementales” y “Otros Cargos”.] sin llenar en 215 ocupaciones (68.365 vacantes, cv=12,3%), sin embargo, la @tbl-cuadro8_odc sólo muestra aquellas para las cuáles el coeficiente de variación es menor a 40%^[La convención es considerar cómo robustas estimaciones con un cv menor al 15%. Dado que esto no se cumple, se presentan todas las ocupaciones con un cv menor a 40%.]. La tabla completa con todas las ocupaciones de difícil cobertura se puede encontrar en el **Apéndice A: Ocupaciones de Difícil Cobertura**.

```{r, fig.align='center'}
#| label: tbl-cuadro8_odc
#| tbl-cap: "Ocupaciones de difícil cobertura, ENADEL 2023."
#| echo: false
#| error: false
#| message: false
#| warning: false

cuadro8_odc<- cuadro8_odc %>% mutate(cv= paste0(cv, "%"))

# Generar la tabla con kable
kable(cuadro8_odc,
      col.names = c("CIUO 08", "Glosa", "Vacantes", "cv"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(1, width = "1.2cm") %>%
  column_spec(2, width = "11cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 
```

La ocupación más demandadas que tiene difícil cobertura es  “`r cuadro8_odc[1,2]`”, con más de 14 mil vacantes; seguido de lejos por “`r cuadro8_odc[2,2]`”, “`r cuadro8_odc[3,2]`” y “`r cuadro8_odc[4,2]`”, con `r cuadro8_odc[2,3]`, `r cuadro8_odc[3,3]` y `r cuadro8_odc[4,3]` vacantes, respectivamente.

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

vacantes_region <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "vacantes_region")



vacantes_region<- vacantes_region %>% select(-c("se","cv", "orden")) 
vacantes_region<- vacantes_region %>% select(region_trab,oficio_label, oficio4,vacantesu12)

vacantes_region<- vacantes_region %>% mutate(vacantesu12= round(vacantesu12,0))

vacantes_region<- vacantes_region %>% mutate(region_trab= case_when(region_trab==1~ "Arica y Parinacota",
                                                                    region_trab==2~ "Tarapacá",
                                                                    region_trab==3~ "Antofagasta",
                                                                    region_trab==4~ "Atacama",
                                                                    region_trab==5~ "Coquimbo",
                                                                    region_trab==6~ "Valparaíso",
                                                                    region_trab==7~ "Metropolitana",
                                                                    region_trab==8~ "O'Higgins",
                                                                    region_trab==9~ "Maule",
                                                                    region_trab==10~ "Ñuble",
                                                                    region_trab==11~ "Biobío",
                                                                    region_trab==12~ "Araucanía",
                                                                    region_trab==13~ "Los Ríos",
                                                                    region_trab==14~ "Los Lagos",
                                                                    region_trab==15~ "Aysén",
                                                                    region_trab==16~ "Magallanes"
                                                                    ) )

```

La @tbl-vacantes_region muestra la ocupación de difícil cobertura con mayor cantidad de vacantes por región dónde, si bien se confirma la prevalencia de “Obreros de explotaciones agrícolas” en 7 regiones, también saltan a la vista otros patrones como la demanda del rubro de la construcción hacia el norte y de la industria manufacturera en el Maule y la Araucanía.



```{r,fig.align = 'center'}
#| label: tbl-vacantes_region
#| tbl-cap: "Ocupación de difícil cobertura con mayor cantidad de vacantes, por región."
#| echo: false
#| error: false
#| message: false
#| warning: false



# Generar la tabla con kable
kable(vacantes_region,
      col.names = c("Región", "Ocupación", "CIUO 08", "Vacantes"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(2, width = "7cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 

```



```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false


vacantes_tam <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "vacantes_tam")
vacantes_tamvent <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "vacantes_tamvent")


vacantes_tam<- vacantes_tam %>% select(-c("se","cv", "orden")) 
vacantes_tamvent<- vacantes_tamvent %>% select(-c("se","cv", "orden")) 

vacantes_tam<- vacantes_tam %>% select(tam_val,oficio_label, oficio4,vacantesu12)
vacantes_tamvent<- vacantes_tamvent %>% select(tam_val=tam_vent,oficio_label, oficio4,vacantesu12)

vacantes_tam<- vacantes_tam %>% mutate(vacantesu12= round(vacantesu12,0),
                                       tam_val=case_when(tam_val==2 ~ "Pequeña (<50)",
                                                         tam_val==3 ~ "Mediana (50-199)",
                                                         tam_val==4 ~ "Grande (>=200)")) 

vacantes_tamvent<- vacantes_tamvent %>% mutate(vacantesu12= round(vacantesu12,0),
                                               tam_val= case_when(tam_val==0 ~ "Sin ventas",
                                                         tam_val==1 ~ "Micro (< 2.400 UF)",
                                                         tam_val==2 ~ "Pequeña (2.400-25.000 UF)",
                                                         tam_val==3 ~ "Mediana (25.000-100.000 UF)",
                                                         tam_val==4 ~ "Grande (>100.000 UF)"))

#Juntar tablas
vacantes_tamano <- rbind(vacantes_tam,vacantes_tamvent)

# agregar columna "Según n° de trabajadores" y "Según ventas"
vacantes_tamano <- data.frame(
  Categoria = c(rep("", 3), rep("", 5)),
  vacantes_tamano) %>% select(Categoria, tam_val, oficio_label, oficio4, vacantesu12)


```
Al indagar según el tamaño de empresa (@tbl-vacantes_tamano), "`r vacantes_tamano[1,3]`" prevalece en las empresas pequeñas (tanto por número de trabajadores como por tamaño de venta) y "`r vacantes_tamano[3,3]`" en las empresas con más de 200 trabajadores y en aquellas con ventas entre 25 y 100 mil UF. La ocupación  "`r vacantes_tamano[8,3]`" es la más difícil de cubrir en empresas de entre 50 y 199 trabajadores (mediana) y en aquellas que tienen ventas superiores a las 10 mil UF.

```{r, fig.align = 'left'}
#| label: tbl-vacantes_tamano
#| tbl-cap: "Ocupación de difícil cobertura con mayor cantidad de vacantes por tamaño de empresa."
#| echo: false
#| error: false
#| message: false
#| warning: false



# Generar la tabla con kable
kable(vacantes_tamano,
      col.names = c("Categoría", "Tamaño Empresa", "Ocupación", "CIUO 08", "Vacantes"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  kable_styling(latex_options = c("scale_down")) %>%
  column_spec(1, bold = TRUE, width = "4cm") %>%
  column_spec(3, width = "5cm") %>%
  column_spec(4, width = "2cm") %>%
  column_spec(5, width = "2cm") %>%
  group_rows("\\textbf{Según n° de trabajadores}", 1, 3, latex_align = "l", escape = FALSE) %>%
  group_rows("\\textbf{Según ventas}", 4, 8, latex_align = "l", escape = FALSE) %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 



```

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

vacantes_sector <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "vacantes_sector")

#Recodificación
vacantes_sector<- vacantes_sector %>% 
  mutate(a2=case_when(a2==1~"Actividades profesionales",
                      a2==2~"Actividades financieras y de seguros",
                      a2==3~"Actividades inmobiliarias",
                      a2==4~"Administración pública",
                      a2==5~"Alojamiento y de servicio de comidas",
                      a2==6~"Comercio",
                      a2==7~"Construcción",
                      a2==8~"Industria manufacturera",
                      a2==9~"Información y comunicaciones",
                      a2==10 ~"Servicios administrativos y de apoyo",
                      a2==11 ~"Silvoagropecuario",
                      a2==12 ~"Pesca y acuicultura",
                      a2==13 ~"Transporte y almacenamiento"),
         vacantesu12= round(vacantesu12,0)) %>% 
  select(a2,oficio_label,oficio4,vacantesu12) %>% arrange(desc(vacantesu12))
 

```
Al analizar las ocupaciones de difícil cobertura según el sector de actividad económica, como se muestra en la @tbl-vacantes_sector, se vuelve a confirmar la dificultad para llenar vacantes de “Obreros de explotaciones agrícolas”, pero también surgen otras ocupaciones relevantes como "`r vacantes_sector[2,2]`"  “Vendedores y asistentes de venta de tiendas, almacenes y puestos de mercado” que es la ocupación con más vacantes sin llenar en los sectores de "`r vacantes_sector[2,1]`"  y "`r vacantes_sector[6,1]`".

```{r, fig.align = 'center'}
#| label: tbl-vacantes_sector
#| tbl-cap: "Ocupación de difícil cobertura con mayor cantidad de vacantes por sector de actividad económica."
#| echo: false
#| error: false
#| message: false
#| warning: false


# Generar la tabla con kable
kable(vacantes_sector,
      col.names = c("Sector Actividad Económica", "Ocupación", "CIUO 08", "Vacantes"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  #kable_styling(latex_options = c( "repeat_header")) %>%
  column_spec(1, width = "6cm") %>%
   column_spec(2, width = "6cm") %>%
   column_spec(3, width = "1.3cm") %>%
   column_spec(4, width = "1.3cm") %>%
footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",general_title = "")



```
Nota: para seleccionar la ocupación de difícil cobertura con mayor cantidad de vacantes sólo se tomó en cuenta la magnitud de la estimación, sin considerar indicadores de robustez como el coeficiente de variación.
\newpage

### Ocupaciones de Difícil Cobertura: Sector Construcción

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

vacantes_constru <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "vacantes_constr")

#Recodificación
vacantes_constru<- vacantes_constru %>% 
  mutate(porcentaje= round((vacantesu12/sum(vacantesu12))*100,1),
         cv=round(cv*100,1),
         vacantesu12= round(vacantesu12,0))%>% 
  select(cargo,vacantesu12,porcentaje, cv) %>% arrange(desc(vacantesu12))



# Crear fila de totales
totales <- vacantes_constru %>%summarise(cargo = "Total",
                                         vacantesu12 = sum(vacantesu12),
                                         porcentaje = round(sum(porcentaje),0), # Suma de porcentajes para verificar que sea 100%
                                         cv = NA_real_)  # NA porque no tiene sentido calcular un total para CV

# Unir la fila de totales a la tabla original
vacantes_constru <- bind_rows(vacantes_constru, totales) %>% filter(vacantesu12>0)
 
```

La @tbl-vacantes_constru muestra todos los cargos del sector Construcción sobre los que se consulta en la encuesta, indicando el número de vacantes, el porcentaje que estas representan del total, y el coeficiente de variación. Se muestran todas las vacantes independiente de la robustez estadística de la estimación.

La ocupación de “`r vacantes_constru[1,1]`” es la más demandada, con `r vacantes_constru[1,2]` vacantes, seguida de “`r vacantes_constru[2,1]`” con `r vacantes_constru[2,2]` vacantes y “`r vacantes_constru[3,1]`” con `r vacantes_constru[3,2]` vacantes.

```{r, fig.align = 'center'}
#| label: tbl-vacantes_constru
#| tbl-cap: "Ocupaciones de difícil cobertura, sector construcción."
#| echo: false
#| error: false
#| message: false
#| warning: false


vacantes_constru<- vacantes_constru %>% mutate(porcentaje= paste0(porcentaje, "%"),cv= paste0(cv, "%"))

# Generar la tabla con kable
kable(vacantes_constru,
      col.names = c("Cargo Construcción", "Vacantes", "% del total", "CV"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(1, width = "9cm") %>%
  #column_spec(2, width = "5cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 

```
\newpage

### Ocupaciones de Difícil Cobertura: Sector Agrícola
```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

vacantes_agro <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "vacantes_agro")



#Recodificación
vacantes_agro<- vacantes_agro %>% 
  mutate(porcentaje= round((vacantesu12/sum(vacantesu12))*100,1),
         cv=round(cv*100,0),
         vacantesu12= round(vacantesu12,0))%>% 
  select(cargo,vacantesu12,porcentaje, cv) %>% arrange(desc(vacantesu12))



# Crear fila de totales
totales <- vacantes_agro %>%summarise(cargo = "Total",
                                         vacantesu12 = sum(vacantesu12),
                                         porcentaje = round(sum(porcentaje),0), # Suma de porcentajes para verificar que sea 100%
                                         cv = NA_real_)  # NA porque no tiene sentido calcular un total para CV

# Unir la fila de totales a la tabla original
vacantes_agro <- bind_rows(vacantes_agro, totales) %>% filter(vacantesu12>0)
 
```

La @tbl-vacantes_agro muestra todos los cargos del sector Agrícola sobre los que se consulta en la encuesta, indicando el número de vacantes, el porcentaje que estas representan del total, y el coeficiente de variación. Se muestran todas las vacantes independiente de la robustez estadística de la estimación.

El cargo  “`r vacantes_agro[1,1]`” es el más demandado, con “`r vacantes_agro[1,2]`” vacantes, el segundo cargo más demandado es “`r vacantes_agro[2,1]`” con `r vacantes_agro[2,2]` vacantes y “ `r vacantes_agro[3,1]`” es el tercer cargo más demandado con `r vacantes_agro[3,2]` vacantes.


```{r, fig.align = 'center'}
#| label: tbl-vacantes_agro
#| tbl-cap: "Ocupaciones de difícil cobertura, sector agrícola."
#| echo: false
#| error: false
#| message: false
#| warning: false

vacantes_agro<- vacantes_agro %>% mutate(porcentaje= paste0(porcentaje, "%"),cv= paste0(cv, "%"))

# Generar la tabla con kable
kable(vacantes_agro,
      col.names = c("Cargo Agrícola", "Vacantes", "% del total", "CV"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(1, width = "7cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "") 

```

Al comparar los sectores agrícola y construcción, se puede notar que el primer sector tiene una mayor dificultad para llenar sus vacantes: mientras en el sector construcción las vacantes difíciles de llenar equivalen al 0,88% del total de contrataciones en los últimos 12 meses; en el sector agrícola equivalen al 3,3% de las contrataciones.

\newpage


## Dificultades para la contratación


```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

dificultad_tot <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "dificultad_tot")

#Recodificación
dificultad_tot <- dificultad_tot %>% filter(dif_label!= "No tuvo dificultades") %>%
  mutate(porc_dif1=round((dif_1/sum(dif_1))*100,1),
         total=dif_1+dif_2+dif_3) %>% 
  select(dif_label,porc_dif1, total)

dificultad_tot <- dificultad_tot %>% mutate(total=round((total/sum(total))*100,1)) %>% arrange(desc(total))



```


El 20,6% de las empresas declaró tener alguna dificultad durante el proceso de contratación para llenar las vacantes disponibles^[Se incluyen todas las vacantes para todos los cargos: módulos de “Directores y gerentes”, “Jefatura/ADP”, “Ocupaciones Elementales” y “Otros Cargos”; Construcción y Agrícola.]. 
La @tbl-dificultad_tot muestra la proporción de respuestas para la primera dificultad mencionada y para el total. Del total de respuestas, la dificultad señalada más frecuentemente es "`r dificultad_tot[1,1]`" (`r dificultad_tot[1,3]` %), seguida de "`r dificultad_tot[2,1]`" (`r dificultad_tot[2,3]` %) y `r dificultad_tot[3,1]`" (`r dificultad_tot[3,3]` %).


```{r}
#| label: tbl-dificultad_tot
#| tbl-cap: "Dificultades principales de contratación."
#| echo: false
#| error: false
#| message: false
#| warning: false

dificultad_tot<- dificultad_tot %>% mutate(porc_dif1= paste0(porc_dif1, "%"),total= paste0(total, "%"))

# Generar la tabla con kable
kable(dificultad_tot,
      col.names = c("Primera dificultad", "% de 1ra dificultad", "% del total"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(1, width = "5cm") %>%
  column_spec(2, width = "3cm") %>%
  column_spec(3, width = "3cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "")
```

### Dificultades para la contratación: Sector Construcción 


```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

dificultad_constru <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "dificultad_constr")

#Recodificación
dificultad_constru <- dificultad_constru %>% filter(dif_label!= "No tuvo dificultades") %>%
  mutate(porc_dif1=round((dif_1/sum(dif_1))*100,1),
         total=dif_1+dif_2+dif_3) %>% 
  select(dif_label,porc_dif1, total)

dificultad_constru <- dificultad_constru %>% mutate(total=round((total/sum(total))*100,1)) %>% arrange(desc(total))


```
@tbl-dificultad_constru muestra que, al considerar el total de menciones, "`r dificultad_constru[1,1]`" (`r dificultad_constru[1,3]` %), fue la dificultad más mencionada, seguida de "`r dificultad_constru[2,1]`" (`r dificultad_constru[2,3]` %) y `r dificultad_constru[3,1]`" (`r dificultad_constru[3,3]` %).
```{r}
#| label: tbl-dificultad_constru
#| tbl-cap: "Dificultades principales de contratación, ocupaciones del sector Construcción."
#| echo: false
#| error: false
#| message: false
#| warning: false

dificultad_constru<- dificultad_constru %>% mutate(porc_dif1= paste0(porc_dif1, "%"),total= paste0(total, "%"))


# Generar la tabla con kable
kable(dificultad_constru,
      col.names = c("Primera dificultad", "% de 1ra dificultad", "% del total"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
    column_spec(1, width = "5cm") %>%
  column_spec(2, width = "3cm") %>%
  column_spec(3, width = "3cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "")
```


### Dificultades para la contratación: Sector Agrícola

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

dificultad_agro <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "dificultad_agro")

#Recodificación
dificultad_agro <- dificultad_agro %>% 
  filter(dif_label!= "No tuvo dificultades") %>%
  select(dif_label,dif_1, dif_2,dif_3) %>% 
  mutate(porc_dif1=round((dif_1/sum(dif_1))*100,1),
          total = rowSums(select(., dif_1, dif_2, dif_3), na.rm = TRUE)) %>% 
  select(dif_label,porc_dif1, total)

dificultad_agro <- dificultad_agro %>% mutate(total=round((total/sum(total))*100,1)) %>% arrange(desc(total))

```
El 17,6% de las empresas consultadas sobre ocupaciones del sector Agrícola declararon tener alguna dificultad durante el proceso de contratación. La @tbl-dificultad_agro indica que las tres dificultades más mencionadas son "`r dificultad_agro[1,1]`" (`r dificultad_agro[1,3]` %), "`r dificultad_agro[2,1]`" (`r dificultad_agro[2,3]` %) y `r dificultad_agro[3,1]`" (`r dificultad_agro[3,3]` %).

```{r}
#| label: tbl-dificultad_agro
#| tbl-cap: "Dificultades principales de contratación, ocupaciones del sector Construcción."
#| echo: false
#| error: false
#| message: false
#| warning: false

dificultad_agro<- dificultad_agro %>% mutate(porc_dif1= paste0(porc_dif1, "%"),total= paste0(total, "%"))

# Generar la tabla con kable
kable(dificultad_agro,
      col.names = c("Primera dificultad", "% de 1ra dificultad", "% del total"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
      column_spec(1, width = "5cm") %>%
  column_spec(2, width = "3cm") %>%
  column_spec(3, width = "3cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "")

```
La @fig-dificultad compara la frecuencia de cada dificultad, para la primera dificultad señalada, según el módulo de la encuesta. Si bien “Candidatos sin competencias técnicas requeridas” es el primer lugar de primeras menciones en todos los módulos de la encuesta, la proporción en el sector agrícola es 1,3 veces más grande que en construcción y 2,2 veces que en el módulo general. “Condiciones laborales no aceptadas” es la segunda mayoría en los tres módulos, pero es notoriamente más prevalente en construcción.

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

#Dificultad total
dificultad_tot <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "dificultad_tot")

dificultad_tot <- dificultad_tot %>% filter(dif_label!= "No tuvo dificultades") %>%
  mutate(porc_dif1=round((dif_1/sum(dif_1))*100,1),
         total=dif_1+dif_2+dif_3) %>% 
  select(dif_label,porc_dif1, total)

dificultad_tot <- dificultad_tot %>% mutate(total=round((total/sum(total))*100,1)) %>% arrange(desc(total))



#Construcción
dificultad_constru <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "dificultad_constr")

dificultad_constru <- dificultad_constru %>% filter(dif_label!= "No tuvo dificultades") %>%
  mutate(porc_dif1=round((dif_1/sum(dif_1))*100,1),
         total=dif_1+dif_2+dif_3) %>% 
  select(dif_label,porc_dif1, total)

dificultad_constru <- dificultad_constru %>% mutate(total=round((total/sum(total))*100,1)) %>% arrange(desc(total))

#Agro
dificultad_agro <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "dificultad_agro")

dificultad_agro <- dificultad_agro %>% 
  filter(dif_label!= "No tuvo dificultades") %>%
  select(dif_label,dif_1, dif_2,dif_3) %>% 
  mutate(porc_dif1=round((dif_1/sum(dif_1))*100,1),
          total = rowSums(select(., dif_1, dif_2, dif_3), na.rm = TRUE)) %>% 
  select(dif_label,porc_dif1, total)

dificultad_agro <- dificultad_agro %>% mutate(total=round((total/sum(total))*100,1)) %>% arrange(desc(total))
```


```{r, fig.cap="Gráfico combinado de resultados", out.width='100%', fig.align='center', fig.pos='H'}
#| label: fig-dificultad
#| fig-cap: "Primera dificultad señalada según módulo"
#| echo: false
#| fig-align: center
#| error: false
#| message: false
#| warning: false



#aqui hay que hacer el gráfico utilizando las tres tablas anteriores.
dificultad_tot <- dificultad_tot %>% select(-c("total"))
dificultad_agro <- dificultad_agro %>% select(-c("total"))
dificultad_constru <- dificultad_constru %>% select(-c("total"))

dificultad_tot_agro <- dificultad_tot %>% left_join(dificultad_agro, by= "dif_label")
dificultad_tot_agro_constru<- dificultad_tot_agro %>% left_join(dificultad_constru, by="dif_label")


colnames(dificultad_tot_agro_constru) <- c("dificultad","Módulo General", "Módulo Agrícola", "Módulo Construcción")



dificultad_larga <- dificultad_tot_agro_constru %>%
  pivot_longer(
    cols = c("Módulo General", "Módulo Agrícola", "Módulo Construcción"),  
    names_to = "sector",             
    values_to = "valor"             
  )



#Gráfico Figura 2

ggplot(dificultad_larga, aes(fill = sector, y = valor, x = dificultad)) + 
  geom_bar(position = position_dodge(width = 0.9), stat = "identity", color = "white", size = 0.5, width =1) + 
  scale_fill_manual(values = c("Módulo Agrícola" = "#e36444", 
                               "Módulo Construcción" = "#c36c9b", 
                               "Módulo General" = "#35638c")) +
  coord_flip() +
  theme_classic() +
  geom_text(aes(label = paste0(valor, "%")), 
            position = position_dodge(width = 0.9), 
            vjust = 0.5, hjust = -0.3, color = "#002A51", size = 2.5) +  
  scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
   scale_x_discrete(expand = expansion(mult = c(0.01, 0.01)),labels = function(x) paste0("\n\n\n ", x, "\n\n\n "))+
   #scale_x_discrete(labels = function(x) paste0("\n\n\n ", x, "\n\n\n ")) + 
   theme(
    legend.position = "bottom",  
    legend.title = element_blank(),  
    legend.text = element_text(size = 6.5),  
    axis.text.x = element_text(size = 7),
    axis.text.y = element_text(size = 6.5, margin = margin(r = 0.01)),  
    axis.line.x = element_line(color = "grey80"), 
    axis.line.y = element_line(color = "grey80"),
    plot.margin = margin(1, 1, 1, 1), 
    axis.title.x = element_blank(),  
    axis.title.y = element_blank(),
    plot.caption = element_text(size = 7)
  ) +
  labs(
    caption = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos." 
  )


```



\newpage

## Educación y experiencia
```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false


educ_tot <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "educ_tot")


educ_tot <- educ_tot %>% 
  filter(educ != 0) %>%
  select(educ, oficios) %>% 
  mutate(porc_educ = round((oficios / sum(oficios)) * 100, 1),
         educ = as.character(case_when(
           educ == 1 ~ "Educación Básica",
           educ == 2 ~ "Educación Media CH",
           educ == 3 ~ "Educación Media TP",
           educ == 4 ~ "Técnico Superior",
           educ == 5 ~ "Profesional",
           educ == 6 ~ "Profesional con Magíster",
           educ == 7 ~ "Profesional con Doctorado",
           TRUE ~ as.character(educ)
         )))

educ_tot <- educ_tot %>% select(educ,porc_educ) %>% mutate(educ = fct_reorder(educ, porc_educ, .desc = FALSE))



  

```
El 86,5% de los cargos^[Esta pregunta sólo se realiza para las ocupaciones señaladas en el módulo de “Otros Cargos”.] consultados tienen algún requisito de nivel educacional. La @fig-educ-tot muestra la frecuencia con la que se solicita cada nivel educacional como requisito.
```{r}
#| label: fig-educ-tot
#| fig-cap: "Frecuencia de requisitos educacionales requeridos"
#| echo: false
#| fig-align: center
#| error: false
#| message: false
#| warning: false




ggplot(educ_tot, aes(y = porc_educ, x = educ)) + 
  geom_bar(position = position_dodge(width = 0.5), stat = "identity", color = "white", size = 0.1,  fill = "#35638c", width = 0.5) + 
  coord_flip() +
  theme_classic() +
  geom_text(aes(label = paste0(porc_educ, "%")), 
            position = position_dodge(width = 0.9), 
            vjust = 0.5, hjust = -0.3, color = "#002A51", size = 3) +
   #scale_x_discrete(expand = expansion(mult = c(1, 1)))+
  scale_y_discrete(expand = c(.1, 0)) + 
  scale_y_continuous(limits = c(0, 35), breaks = seq(0, 35, by = 5), expand = c(0,0))+
   theme(
    legend.position = "bottom",  
    legend.title = element_blank(),  
    legend.text = element_text(size = 5),  
    axis.text.x = element_text(size = 5),  
    axis.text.y = element_text(size = 8),  
    axis.line.x = element_line(color = "grey80"), 
    axis.line.y = element_line(color = "grey80"),
    plot.margin = margin(1, 1, 1, 1), 
    axis.title.x = element_blank(),  
    axis.title.y = element_blank(),
    plot.caption = element_text(size = 7)
  ) +
  labs(
    caption = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos."   )


```

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

# se necesitan las 2 tabals para crear la tabla resultante

exp_mean_sector <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "exp_mean_sector")
exp_mean_sector<- exp_mean_sector %>% mutate(exp=round(exp,1))  %>% select(a2,exp, label)

exp_0_sector <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "exp_0_sector")

exp_mean_tam <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "exp_mean_tam")
exp_mean_tam <- exp_mean_tam %>% mutate(exp=round(exp,1)) %>% select(tam_val, exp)
exp_mean_tam <- exp_mean_tam %>% mutate(tam_val= as.character(case_when(tam_val==2 ~ "pequeñas",
                                                                        tam_val==3 ~ "medianas",
                                                                        tam_val==4 ~ "grandes")))



#sumar oficios_0 + oficios_1 y dividir oficios_1 por el total
exp_0_sector <- exp_0_sector %>% mutate(total=oficios_0+oficios_1,
                                        porc_total= round((oficios_1/total)*100,1)) %>% select(a2,porc_total)


exp_mean_sector <- exp_mean_sector %>% left_join(exp_0_sector, by="a2") %>% select(label, porc_total,exp)

exp_mean_sector <- exp_mean_sector %>% mutate(porc_total= paste0(porc_total, "%")) %>% arrange(desc(porc_total))

```

Al consultar sobre experiencia requerida para el cargo, en el 33,8% de los casos se declara que el cargo no requiere experiencia. Para aquellas ocupaciones donde si se señala experiencia laboral como uno de los requisitos, el promedio total es de 2,6 años de experiencia (con un error estándar de 0,12), sin haber mucha variación a través de los distintos tamaños de empresa: se solicitan `r exp_mean_tam[1,2]`,  `r exp_mean_tam[2,2]` y  `r exp_mean_tam[3,2]` años en promedio para empresas `r exp_mean_tam[1,1]`, `r exp_mean_tam[2,1]` y `r exp_mean_tam[3,1]`, respectivamente.

```{r}
#| label: tbl-exp_mean_sector
#| tbl-cap: "Experiencia laboral promedio solicitada por sector de actividad económica."
#| echo: false
#| error: false
#| message: false
#| warning: false


# Generar la tabla con kable
kable(exp_mean_sector,
      col.names = c("Sector de Actividad Económica", "% que solicita experiencia", "Experiencia promedio (años)"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
      column_spec(1, width = "5cm") %>%
  column_spec(1, width = "9cm") %>%
  column_spec(2, width = "3cm") %>%
  column_spec(3, width = "3cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "")
```


```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false


# Obtén las primeras 3 filas
top_3 <- exp_mean_sector %>% slice_head(n = 3)

# Obtén las últimas 3 filas
bottom_3 <- exp_mean_sector %>% slice_tail(n = 3)

# Combina las dos tablas en una sola
top_and_bottom <- bind_rows(top_3, bottom_3)

top_and_bottom <- top_and_bottom %>% mutate(experiencia= case_when(porc_total>=72 ~"Más experiencia",
                                                                   TRUE ~"Menos experiencia"))

promedio_pequenos <- top_and_bottom %>%
  arrange(exp) %>%             
  slice_head(n = 2) 



```

La @fig-top_and_bottom muestra a los tres sectores con mayor y menor proporción de empresas que tienen requisitos de experiencia para las nuevas contrataciones en los cargos consultados. Para aquellos sectores que solicitan experiencia con más frecuencia, el promedio supera los dos años, siendo "`r top_and_bottom[1,1]`" el sector que más solicita, con `r top_and_bottom[1,3]` años en promedio.
```{r}
#| label: fig-top_and_bottom
#| fig-cap: "Años de experiencia promedio para sectores que solicitan más y menos experiencia"
#| echo: false
#| fig-align: center
#| error: false
#| message: false
#| warning: false

ggplot(top_and_bottom, aes(y = exp, x = label)) + 
  geom_bar(position = "dodge", stat = "identity", color = "white", size = 0.1,  fill = "#35638c", width = 0.5) + 
  coord_flip() +
  theme_classic() +
  geom_text(aes(label = exp), 
            position = position_dodge(width = 0.9), 
            vjust = 0.5, hjust = 1.5, color = "white", size = 3.5) +
  scale_y_discrete(expand = c(.1, 0)) + 
  scale_y_continuous(limits = c(0, 3), breaks = seq(0, 3, by = 0.5), expand = c(0,0))+
   theme(
    legend.position = "bottom",  
    legend.title = element_blank(),  
    legend.text = element_text(size = 5),  
    axis.text.x = element_text(size = 5),  
    axis.text.y = element_text(size = 8),  
    axis.line.x = element_line(color = "grey80"), 
    axis.line.y = element_line(color = "grey80"),
    plot.margin = margin(1, 1, 1, 1), 
    axis.title.x = element_blank(),  
    axis.title.y = element_blank(),
    plot.caption = element_text(size = 7)
  ) +
  labs(
    caption = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos." )+
  facet_wrap(~ experiencia, ncol = 1, scales = "free_y")


```

Con respecto a la experiencia solicitada por sector de actividad económica, los sectores de "`r promedio_pequenos[1,1]`" y de "`r promedio_pequenos[2,1]`" son los que requieren menos años de experiencia (`r mean(promedio_pequenos$exp,na.rm=T)` años en promedio); mientras que "`r exp_mean_sector %>%  filter(exp == max(exp)) %>%  select(label)`" es el que más años de experiencia requiere, con `r max(exp_mean_sector$exp)` años en promedio.

## Canales de reclutamiento
Frente a la pregunta ^[Esta pregunta sólo se realiza para las ocupaciones señaladas en el módulo de “Otros Cargos”.]:


_¿Nos puede indicar que canales o medios de contratación utilizó en los procesos de reclutamiento y búsqueda de personas?_

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false


canal <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "canal")
canal <- canal %>% select(canal_label,canal_1, canal_2, canal_3) %>% 
  mutate(total= canal_1 + canal_2 + canal_3)
canal<- canal %>% mutate(canal_1= round(canal_1/sum(canal_1)*100, 1),
                         total= round(total/sum(total)*100,1)) %>% arrange(desc(total))

canal<- canal %>% select(canal_label,canal_1, total)

```


La Tabla 18 muestra la proporción de cada uno de los canales mencionados, tanto para el primer canal mencionado, como para el total.

```{r}
#| label: tbl-canal
#| tbl-cap: "Canales de reclutamiento más utilizados, ENADEL 2023"
#| echo: false
#| error: false
#| message: false
#| warning: false


canal<- canal %>% mutate(canal_1= paste0(canal_1, "%"),total= paste0(total, "%"))

# Generar la tabla con kable
kable(canal,
      col.names = c("Canal de reclutamiento","1° Canal", "Total"),
      format = "latex", 
      booktabs = TRUE) %>% 
  kable_classic(full_width = FALSE, html_font = "Aptos") %>%
  column_spec(1, width = "9cm") %>%
  column_spec(2, width = "3cm") %>%
  column_spec(3, width = "3cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
            general_title= "")
```
Considerando el total de respuestas (los tres canales mencionados), se tiene que las principales vías de reclutamiento son “`r canal[1,1]`" con `r canal[1,3]` y “`r canal[2,1]`" con un `r canal[2,3]`.  Los canales menos utilizados según las menciones son, "`r canal[12,1]`" con apenas un `r canal[12,3]`, y "`r canal[10,1]`", con el `r canal[10,3]` .


## Conocimiento de instituciones y programas

Frente a la pregunta:
_¿Conoce, y ha accedido a beneficios de las siguientes instituciones o servicios públicos?_

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false


conocimiento_1 <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "conocimiento_1")


conocimiento_1<- conocimiento_1 %>%select(respuesta, programa, pc)  %>%
  mutate(respuesta=case_when(respuesta==1~ "No lo conoce",
                             respuesta==2~ "Lo conoce, pero no ha accedido",
                             respuesta==3~ "Lo conoce, y sí ha accedido",
                             respuesta==4~ "No sabe"),
         programa= case_when(programa=="sercotec"~"SERCOTEC",
                             programa=="corfo"~"CORFO",
                             programa=="sence"~"SENCE",
                             programa=="omil"~"OMIL",
                             programa=="chileval"~"Chile Valora",
                             programa=="bne"~"BNE"))

conocimiento <- conocimiento_1 %>% filter(respuesta=="Lo conoce, pero no ha accedido" | respuesta=="Lo conoce, y sí ha accedido") %>% group_by(programa) %>% summarise(conocimiento=sum(pc))

conocimiento<- conocimiento %>% mutate(conocimiento=round(conocimiento*100,1)) %>%
                                         arrange(desc(conocimiento)) %>%
                                         mutate(conocimiento=paste0(conocimiento, "%"))
                                       
uso <- conocimiento_1%>% filter(respuesta== "Lo conoce, y sí ha accedido") %>% 
  group_by(programa) %>% 
  summarise(uso= sum(pc)) %>% arrange(desc(uso))

uso<- uso %>%  mutate(uso=round(uso*100,1)) %>% mutate(uso= paste0(uso, "%"))
  

```

SENCE `r conocimiento[1,1]` se posiciona como la institución y/o servicio con más conocimiento, con un `r conocimiento[1,2]` de conocimiento, seguido de `r conocimiento[2,1]` (`r conocimiento[2,2]`) y `r conocimiento[3,1]` (`r conocimiento[3,2]`). `r uso[1,1]`  lidera el ranking de uso, con un `r uso[1,2]`, seguido por las `r uso[2,1]` (`r uso[2,2]`) y la `r uso[3,1]` (`r uso[3,2]`). `r conocimiento[6,1]` es la institución con menor conocimiento, con  sólo un `r conocimiento[6,2]` de los encuestados declarando que lo conocen.

```{r}
#| label: fig-conocimiento_1
#| fig-cap: "Conocimiento sobre beneficios de instituciones o servicios públicos, ENADEL 2023."
#| echo: false
#| fig-align: center
#| error: false
#| message: false
#| warning: false

ggplot(conocimiento_1, aes(fill=respuesta, y=pc, x=programa)) + 
    geom_bar(position="fill", stat="identity", width = 0.4, height = 0.7)+
   scale_fill_manual(values = c("No lo conoce"="#35638c","Lo conoce, pero no ha accedido"= "#bb1c42","Lo conoce, y sí ha accedido" = "#e36444", "No sabe" = "#f4bb54")) +
coord_flip() +
  geom_text(aes(label = scales::percent(pc, accuracy = 0.1), y = pc / 2),  # Centrar el texto en cada barra
            color = "white", size = 3.5, position = position_fill(vjust = 0.5)) +

  scale_y_continuous(limits = c(0, 1.05), breaks = seq(0, 1, by = 0.1), labels = scales::percent_format(accuracy = 1
), expand = c(0,0))+
  theme_classic() +
  theme(legend.position = "top",  
    legend.title = element_blank(),  
    legend.text = element_text(size = 7),  
    axis.text.x = element_text(size = 7),  
    axis.text.y = element_text(size = 7),  
    axis.line.x = element_line(color = "grey80"), 
    axis.line.y = element_line(color = "grey80"),
    plot.margin = margin(1, 1, 1, 1), 
    axis.title.x = element_blank(),  
    axis.title.y = element_blank(),
    plot.caption = element_text(size = 7))+
  labs(
    caption = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos." )
  
```

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

conocimiento_2 <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "conocimiento_2")


conocimiento_2<- conocimiento_2 %>%select(respuesta, programa, pc)  %>%
  mutate(respuesta=case_when(respuesta==1~ "No lo conoce",
                             respuesta==2~ "Lo conoce, pero no ha accedido",
                             respuesta==3~ "Lo conoce, y sí ha accedido",
                             respuesta==4~ "No sabe"),
         programa= case_when(programa=="despega"~"DESPEGA MIPE",
                             programa=="sej"~"Subsidio al Empleo Joven",
                             programa=="btm"~"Bono Trabajo Mujer",
                             programa=="expmayor"~"EXPERIENCIA MAYOR",
                             programa=="aprendiz"~"APRENDICES",
                             programa=="ft"~"FRANQUICIA TRIBUTARIA",
                             programa=="ferias" ~ "FERIAS LABORALES",
                             programa=="digpyme" ~ "DIGITALIZA TU PYME",
                             programa=="fosis" ~ "FOSIS"))


conocimiento <- conocimiento_2 %>% filter(respuesta=="Lo conoce, pero no ha accedido" | respuesta=="Lo conoce, y sí ha accedido") %>% group_by(programa) %>% summarise(conocimiento=sum(pc))

conocimiento<- conocimiento %>% mutate(conocimiento=round(conocimiento*100,1)) %>%
                                         arrange(desc(conocimiento)) %>%
                                         mutate(conocimiento=paste0(conocimiento, "%"))
                                       
uso <- conocimiento_2%>% filter(respuesta== "Lo conoce, y sí ha accedido") %>% 
  group_by(programa) %>% 
  summarise(uso= sum(pc)) %>% arrange(desc(uso))

uso<- uso %>%  mutate(uso=round(uso*100,1)) %>% mutate(uso= paste0(uso, "%"))


```
Por otro lado, la frente a la pregunta:
_¿Conoce, y ha accedido a beneficios de los siguientes programas o subsidios públicos?_

Los subsidios `r conocimiento[1,1]`y `r conocimiento[2,1]` son los programas con un mayor nivel de conocimiento (`r conocimiento[1,2]`y `r conocimiento[2,2]`, respectivamente), seguido por el programa `r conocimiento[3,1]` (`r conocimiento[3,2]`) y las `r conocimiento[4,1]` (`r conocimiento[4,2]`). Con respecto al nivel de uso, los programas de subsidio también lideran, seguido de la `r uso[2,1]`  ( `r uso[2,2]`).

```{r}
#| label: fig-conocimiento_2
#| fig-cap: "Conocimiento sobre beneficios de programas o subsidios públicos, ENADEL 2023."
#| echo: false
#| fig-align: center
#| error: false
#| message: false
#| warning: false

ggplot(conocimiento_2, aes(fill=respuesta, y=pc, x=programa)) + 
    geom_bar(position="fill", stat="identity", width = 0.4, height = 0.7)+
   scale_fill_manual(values = c("No lo conoce"="#35638c","Lo conoce, pero no ha accedido"= "#bb1c42","Lo conoce, y sí ha accedido" = "#e36444", "No sabe" = "#f4bb54")) +
coord_flip() +
  geom_text(aes(label = scales::percent(pc, accuracy = 0.1), y = pc / 2),  # Centrar el texto en cada barra
            color = "white", size = 3.5, position = position_fill(vjust = 0.5)) +

  scale_y_continuous(limits = c(0, 1.05), breaks = seq(0, 1, by = 0.1), labels = scales::percent_format(accuracy = 1
), expand = c(0,0))+
  theme_classic() +
  theme(legend.position = "top",  
    legend.title = element_blank(),  
    legend.text = element_text(size = 7),  
    axis.text.x = element_text(size = 7),  
    axis.text.y = element_text(size = 7),  
    axis.line.x = element_line(color = "grey80"), 
    axis.line.y = element_line(color = "grey80"),
    plot.margin = margin(1, 1, 1, 1), 
    axis.title.x = element_blank(),  
    axis.title.y = element_blank(),
    plot.caption = element_text(size = 7))+
  labs(
    caption = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos." )

```
La mayoría de los programas tienen un bajo nivel de conocimiento:  `r conocimiento[9,1]`,  `r conocimiento[8,1]` y `r conocimiento[7,1]` tienen tasas de conocimiento inferiores al `r conocimiento[7,2]`, y `r conocimiento[6,1]` de alrededor del `r conocimiento[6,2]`.

\newpage

## Apéndice A: Ocupaciones de Difícil Cobertura

```{r}
#| echo: false
#| error: false
#| message: false
#| warning: false

cuadro8_odc <- readxl::read_xlsx("../Tablas/porcentajes.xlsx", sheet = "cuadro8_odc") %>% 
  filter(cv!=0) %>% filter(n_region==0) %>% select(oficio4,oficio_label,vacantesu12,cv) %>% 
  mutate(vacantesu12=round(vacantesu12,0),cv=round(cv*100,1))%>% 
  arrange(desc(vacantesu12))

cuadro8_odc<- cuadro8_odc %>% mutate(cv= paste0(cv, "%"))



```

```{r}
#| label: tbl-vacantes_totales
#| tbl-cap: ""
#| echo: false
#| error: false
#| message: false
#| warning: false



kable(cuadro8_odc,
      col.names = c("CIUO_08","Glosa", "Vacantes", "CV"),
      format = "latex",
      booktabs = TRUE,
      longtable = TRUE) %>%
  column_spec(2, width = "9cm") %>%
  footnote(general = "Fuente: Elaboración propia utilizando datos de ENADEL 2023, datos expandidos.",
           general_title = "")

```

\newpage
\includepdf[pages=-]{../Quarto/Portada/Portadas-Enadel-2023-5.pdf}

