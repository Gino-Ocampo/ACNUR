# autora: antoniaaguileracarrasco@gmail.com
#
# fecha creación: Agosto 2024
# fecha última modificación: Septiembre 2024
# ---------------------------
# Paquetes:
paquetes <- c("tidyverse", "dplyr", "plyr", "knitr", "haven", "readxl", "writexl", "Hmisc", "survey", "labelled")
#invisible(lapply(paquetes, install.packages, character.only = TRUE))
invisible(lapply(paquetes, library, character.only = TRUE))
enadel_wide <- read.csv("datos/enadel_wide.csv")
enadel_long <- read.csv("datos/enadel_long.csv")
# svy
options(survey.lonely.psu="adjust")
design_wide <- svydesign(ids = ~folio, strata = ~estrato_cm, weights = ~fact_emp, data = enadel_wide, nest = TRUE)
design_long_tot <- svydesign(ids = ~folio, strata = ~estrato_cm, weights = ~fact_emp, data = enadel_long, nest = TRUE)
design_t5   <- subset(design_long_tot, tipo_cat == 5)
design_t6   <- subset(design_long_tot, tipo_cat == 6)
design_long <- subset(design_long_tot, tipo_cat%in%c(1, 2, 3, 4))
# --- cuadro resumen
# cantidad de empresas
tot_folios <- svytotal(~empresas, design_wide, na.rm = TRUE)[1]
tot_folios
tot_folios_muestra <- length(unique(enadel_wide$folio)) # 5820 empresas
tot_folios_muestra
# total trabajadores
tot_trab <- svytotal(~trabval, design_wide, na.rm = TRUE)[1]
tot_trab_muestra <- sum(enadel_wide$trabval)
tot_trab
tot_trab_muestra
# empresas por sector
folios_sector <- svyby(~empresas, ~sector, design_wide, svytotal, na.rm = TRUE)[1:2]
folios_sector
folios_sector_muestra <- enadel_wide |> group_by(sector) |>
dplyr::summarise(tot_folios = n())
folios_sector_muestra
cuadro_resumen <- data.frame(tipo = c(folios_sector$sector, "Total"),
empresas_muestra = c(folios_sector_muestra$tot_folios, tot_trab),
empresas_expandidos = c(folios_sector$empresas, tot_folios),
trab_muestra = c(trab_sector_muestra$tot_trab, tot_trab_muestra),
trab_expandidos = c(trab_sector$trabval, tot_trab))
# trabajadores por sector
trab_sector <- svyby(~trabval, ~sector, design_wide, svytotal, na.rm = TRUE)[1:2]
trab_sector_muestra <- enadel_wide |> group_by(sector) |>
dplyr::summarise(tot_trab = sum(trabval))
cuadro_resumen <- data.frame(tipo = c(folios_sector$sector, "Total"),
empresas_muestra = c(folios_sector_muestra$tot_folios, tot_trab),
empresas_expandidos = c(folios_sector$empresas, tot_folios),
trab_muestra = c(trab_sector_muestra$tot_trab, tot_trab_muestra),
trab_expandidos = c(trab_sector$trabval, tot_trab))
cuadro_resumen
# --- % por region
# empresas por region
folios_region <- svyby(~empresas, ~region_trab, design_wide, svytotal, na.rm = TRUE)[1:2]
folios_region
# trabajadores por region
trab_region <- svyby(~trabval, ~region_trab, design_wide, svytotal, na.rm = TRUE)[1:2]
trab_region
pc_region <- data.frame (region =  names(attr(folios_region$region_trab, "labels")),
empresas = folios_region$empresas,
trabajadores = trab_region$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores))
# --- % por region
# empresas por region
folios_region <- svyby(~empresas, ~region_trab, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por region
trab_region <- svyby(~trabval, ~region_trab, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_region <- data.frame (region =  names(attr(folios_region$region_trab, "labels")),
empresas = folios_region$empresas,
trabajadores = trab_region$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores))
pc_region
pc_region <- data.frame (region =  names(attr(folios_region$region_trab, "labels")),
empresas = folios_region$empresas,
trabajadores = trab_region$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores))
# --- % por tamaño
# empresas por tamaño
tam_tot <- svyby(~empresas, ~tam_val, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por tamaño
tam_trab_tot <- svyby(~trabval, ~tam_val, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_tam <- data.frame (tam_val = tam_tot$tam_val,
empresas = tam_tot$empresas,
trabajadores = tam_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores),
tam_label = case_when(tam_val == 2 ~ "Pequeña",
tam_val == 3 ~ "Mediana",
tam_val == 4 ~ "Grande")) |>
select(tam_label, empresas, trabajadores, pc_empresas, pc_trabajadores)
pc_tam
pc_region
pc_region <- data.frame (region =  names(attr(folios_region$region_trab, "labels")),
empresas = folios_region$empresas,
trabajadores = trab_region$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores))
pc_tam
pc_tam <- data.frame (tam_val = tam_tot$tam_val,
empresas = tam_tot$empresas,
trabajadores = tam_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores),
tam_label = case_when(tam_val == 2 ~ "Pequeña",
tam_val == 3 ~ "Mediana",
tam_val == 4 ~ "Grande"))
pc_tam
pc_tam <- data.frame (tam_val = tam_tot$tam_val,
empresas = tam_tot$empresas,
trabajadores = tam_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores),
tam_label = case_when(tam_val == 2 ~ "Pequeña",
tam_val == 3 ~ "Mediana",
tam_val == 4 ~ "Grande")) |>
select(tam_label, empresas, trabajadores, pc_empresas, pc_trabajadores)
pc_tam
# --- % por tamaño de ventas
# empresas por tamaño
tamvent_tot <- svyby(~empresas, ~tam_vent, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por tamaño
tamvent_trab_tot <- svyby(~trabval, ~tam_vent, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_tamvent <- data.frame (tam_vent = val_labels(tamvent_tot$tam_vent),
empresas = tamvent_tot$empresas,
trabajadores = tamvent_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores)) |>
select(tam_vent, empresas, trabajadores, pc_empresas, pc_trabajadores)
# --- % por sector
# empresas por sector
acteco_tot <- svyby(~empresas, ~a2, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por sector
acteco_trab_tot <- svyby(~trabval, ~a2, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_acteco <- data.frame (act_eco = names(attr(acteco_tot$a2, "labels")[1:13]),
empresas = acteco_tot$empresas,
trabajadores = acteco_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores)) |>
select(act_eco, empresas, trabajadores, pc_empresas, pc_trabajadores)
pc_acteco
# --- vacantes no llenadas tot
# En los últimos 12 meses, ¿Su empresa contrató personas nuevas?
contratos_u12 <- svyby(~empresas, ~c1, design_wide, svytotal, na.rm = TRUE)[1:2]
# En los últimos 12 meses, ¿Tuvo vacantes que no pudo llenar?
vacantes_nollenadas <- svyby(~empresas, ~c2, design_wide, svytotal, na.rm = TRUE)[1:2]
vacantes_nollenadas_tot <- data.frame(label = c("SI", "NO"),
contratos_u12 = contratos_u12$empresas,
vac_nollenadas_u12 = vacantes_nollenadas$empresas)
vacantes_nollenadas_tot
# --- contratos_sector últimos 12 meses
contratos_sector <- svyby(~empresas, ~c1+a2, design_wide, svytotal, na.rm = TRUE)[1:3] |>
pivot_wider(names_from = "c1", values_from = "empresas", names_glue = "empresas_{c1}") |>
mutate(tot_empresas = empresas_1+empresas_2) |>
dplyr::rename(convacu12_1 = empresas_1) |>
dplyr::rename(convacu12_2 = empresas_2)
unique_oficio <- unique(contratos_sector$a2)
labels_oficio <- attr(contratos_sector$a2, "labels")
matched_labels <- names(labels_oficio)[match(unique_oficio, labels_oficio)]
contratos_sector$sector_label <- matched_labels[match(contratos_sector$a2, unique_oficio)]
contratos_sector
View(enadel_wide)
View(enadel_wide)
labels_oficio
# ---------------------------------------------------------------------------------- #
# ------------------------------------ PREÁMBULO ----------------------------------- #
# ---------------------------------------------------------------------------------- #
region <- seq(1,16)
cuadro_resumen <- data.frame(tipo = c(folios_sector$sector, "Total"),
empresas_muestra = c(folios_sector_muestra$tot_folios, tot_trab),
empresas_expandidos = c(folios_sector$empresas, tot_folios),
trab_muestra = c(trab_sector_muestra$tot_trab, tot_trab_muestra),
trab_expandidos = c(trab_sector$trabval, tot_trab))
cuadro_resumen
pc_region <- data.frame (region =  names(attr(folios_region$region_trab, "labels")),
empresas = folios_region$empresas,
trabajadores = trab_region$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores))
pc_region <- data.frame (region =  names(attr(folios_region$region_trab, "labels")),
empresas = folios_region$empresas,
trabajadores = trab_region$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores))
paquetes <- c("tidyverse", "dplyr", "plyr", "knitr", "haven", "readxl", "writexl", "Hmisc", "survey", "labelled")
#invisible(lapply(paquetes, install.packages, character.only = TRUE))
invisible(lapply(paquetes, library, character.only = TRUE))
# ---------------------------
enadel_wide <- read.csv("datos/enadel_wide.csv") |> subset(region_trab%in%region)
# ---------------------------------------------------------------------------------- #
# ------------------------------------ PREÁMBULO ----------------------------------- #
# ---------------------------------------------------------------------------------- #
region <- seq(1,16)
enadel_wide <- read.csv("datos/enadel_wide.csv") |> subset(region_trab%in%region)
enadel_long <- read.csv("datos/enadel_long.csv") |> subset(region_trab%in%region)
# svy
options(survey.lonely.psu="adjust")
design_wide <- svydesign(ids = ~folio, strata = ~estrato_cm, weights = ~fact_emp, data = enadel_wide, nest = TRUE)
design_long_tot <- svydesign(ids = ~folio, strata = ~estrato_cm, weights = ~fact_emp, data = enadel_long, nest = TRUE)
design_t5   <- subset(design_long_tot, tipo_cat == 5)
design_t6   <- subset(design_long_tot, tipo_cat == 6)
design_long <- subset(design_long_tot, tipo_cat%in%c(1, 2, 3, 4))
{
# --- cuadro resumen
# cantidad de empresas
tot_folios <- svytotal(~empresas, design_wide, na.rm = TRUE)[1]
tot_folios_muestra <- length(unique(enadel_wide$folio)) # 5820 empresas
# total trabajadores
tot_trab <- svytotal(~trabval, design_wide, na.rm = TRUE)[1]
tot_trab_muestra <- sum(enadel_wide$trabval)
# empresas por sector
folios_sector <- svyby(~empresas, ~sector, design_wide, svytotal, na.rm = TRUE)[1:2]
folios_sector_muestra <- enadel_wide |> group_by(sector) |>
dplyr::summarise(tot_folios = n())
# trabajadores por sector
trab_sector <- svyby(~trabval, ~sector, design_wide, svytotal, na.rm = TRUE)[1:2]
trab_sector_muestra <- enadel_wide |> group_by(sector) |>
dplyr::summarise(tot_trab = sum(trabval))
cuadro_resumen <- data.frame(tipo = c(folios_sector$sector, "Total"),
empresas_muestra = c(folios_sector_muestra$tot_folios, tot_trab),
empresas_expandidos = c(folios_sector$empresas, tot_folios),
trab_muestra = c(trab_sector_muestra$tot_trab, tot_trab_muestra),
trab_expandidos = c(trab_sector$trabval, tot_trab))
# --- % por region
# empresas por region
folios_region <- svyby(~empresas, ~region_trab, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por region
trab_region <- svyby(~trabval, ~region_trab, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_region <- data.frame (region =  names(attr(folios_region$region_trab, "labels")),
empresas = folios_region$empresas,
trabajadores = trab_region$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores))
# --- % por tamaño
# empresas por tamaño
tam_tot <- svyby(~empresas, ~tam_val, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por tamaño
tam_trab_tot <- svyby(~trabval, ~tam_val, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_tam <- data.frame (tam_val = tam_tot$tam_val,
empresas = tam_tot$empresas,
trabajadores = tam_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores),
tam_label = case_when(tam_val == 2 ~ "Pequeña",
tam_val == 3 ~ "Mediana",
tam_val == 4 ~ "Grande")) |>
select(tam_label, empresas, trabajadores, pc_empresas, pc_trabajadores)
# --- % por tamaño de ventas
# empresas por tamaño
tamvent_tot <- svyby(~empresas, ~tam_vent, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por tamaño
tamvent_trab_tot <- svyby(~trabval, ~tam_vent, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_tamvent <- data.frame (tam_vent = val_labels(tamvent_tot$tam_vent),
empresas = tamvent_tot$empresas,
trabajadores = tamvent_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores)) |>
select(tam_vent, empresas, trabajadores, pc_empresas, pc_trabajadores)
# --- % por sector
# empresas por sector
acteco_tot <- svyby(~empresas, ~a2, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por sector
acteco_trab_tot <- svyby(~trabval, ~a2, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_acteco <- data.frame (act_eco = names(attr(acteco_tot$a2, "labels")[1:13]),
empresas = acteco_tot$empresas,
trabajadores = acteco_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores)) |>
select(act_eco, empresas, trabajadores, pc_empresas, pc_trabajadores)
}
{
cu12_t6_total <- svytotal(~contratadosu12, design_t6, na.rm = TRUE)
cv(cu12_t6_total)
# por ocupación
cu12_t6 <- svyby(~contratadosu12, ~cargo, design_t6, svytotal, na.rm = TRUE) |>
mutate(orden = case_when(cargo == "Obrero agrícola de siembra, viveros"~1,
cargo == "Obrero agrícola de poda, raleo"~2,
cargo == "Obrero agrícola de riego, aplicación de agroquímicos"~3,
cargo == "Obrero agrícola de cosecha"~4,
cargo == "Obrero agrícola de packing frutícola, bodega, estabilización, embotellado"~5,
cargo == "Obrero agrícola de almácigos"~6,
cargo == "Obrero pecuario de ordeña"~7,
cargo == "Obrero pecuario de crianza, alimentación, pastoreo"~8,
cargo == "Obrero agrícola de manejo reproductivo y sanitario"~9,
cargo == "Obrero agroindustrial gestión de cría y engorda"~10,
cargo == "Obrero agroindustrial en matadero"~11,
cargo == "Obrero agroindustrial limpieza, control plagas y enfermedades"~12,
cargo == "Obrero forestal de siembra"~13,
cargo == "Obrero forestal de cosecha"~14,
cargo == "Obrero forestal en labores de aserrador"~15)) |>
arrange(orden)
cu12_t6$cv <- cv(cu12_t6)
}
{
cu12_t5_total <- svytotal(~contratadosu12, design_t5, na.rm = TRUE)
cv(cu12_t5_total)
# por ocupación
cu12_t5 <- svyby(~contratadosu12, ~cargo, design_t5, svytotal, na.rm = TRUE) |>
mutate(orden = case_when(cargo == "Encargados de Obra"~1,
cargo == "Capataces"~2,
cargo == "Electrónicos, electromecánicos e instrumentistas"~3,
cargo == "Laboratoristas"~4,
cargo == "Electricistas (técnicos y/o maestros)"~5,
cargo == "Ingenieros, prevencionistas, arqueólogos, otros profesionales"~6,
cargo == "Operadores planta asfalto y áridos"~7,
cargo == "Operadores de maquinaria pesada"~8,
cargo == "Operadores de maquinaria liviana"~9,
cargo == "Trazadores"~10,
cargo == "Mecánicos"~11,
cargo == "Soldadores"~12,
cargo == "Enfierradores"~13,
cargo == "Albañiles"~14,
cargo == "Concreteros"~15,
cargo == "Carpinteros"~16,
cargo == "Pintores"~17,
cargo == "Baldoseros y ceramistas"~18,
cargo == "Tuberos y peradores de termofusión"~19,
cargo == "Sanitarios y gásfiteres"~20,
cargo == "Instaladores de gas"~21,
cargo == "Otros maestros de primera y segunda"~22,
cargo == "Buzos"~23,
cargo == "Bodegueros y cardcheckers"~24,
cargo == "Obreros y jornales"~25)) |>
arrange(orden)
cu12_t5$cv <- cv(cu12_t5)
}
# ------------------ CONTRATACIONES ÚLTIMOS 12 MESES POR OCUPACIÓN ----------------- #
{
cu12_total <- svytotal(~contratadosu12, design_long, na.rm = TRUE)
cv(cu12_total)
# por ocupación
cu12 <- svyby(~contratadosu12, ~oficio4, design_long, svytotal, na.rm = TRUE) |> arrange(desc(contratadosu12))
cu12$cv <- cv(cu12)
# labels
unique_oficio <- unique(cu12$oficio4)
labels_oficio <- attr(cu12$oficio4, "labels")
matched_labels <- names(labels_oficio)[match(unique_oficio, labels_oficio)]
cu12$oficio_label <- matched_labels[match(cu12$oficio, unique_oficio)]
# por ocupación y sector
cu12_sector <- svyby(~contratadosu12, ~oficio4+a2, design_long, svytotal, na.rm = TRUE) |> arrange(desc(contratadosu12))
cu12_sector$cv <- cv(cu12_sector)
# labels oficio
unique_oficio <- unique(cu12_sector$oficio4)
labels_oficio <- attr(cu12_sector$oficio4, "labels")
matched_labels <- names(labels_oficio)[match(unique_oficio, labels_oficio)]
cu12_sector$oficio_label <- matched_labels[match(cu12_sector$oficio, unique_oficio)]
# labels sector
unique_sector <- unique(cu12_sector$a2)
labels_sector <- attr(cu12_sector$a2, "labels")
matched_labels <- names(labels_sector)[match(unique_sector, labels_sector)]
cu12_sector$sector_label <- matched_labels[match(cu12_sector$a2, unique_sector)]
cu12_sector <- cu12_sector |> arrange(sector_label, desc(contratadosu12)) |>
subset(contratadosu12>0) |> select(sector_label, a2, oficio_label, oficio4, contratadosu12, se, cv)
}
tam_trab_tot
tam_tot
# script: 5_analisis.R
#
# objetivo: Validar el total de vacantes no llenadas
#
# autora: antoniaaguileracarrasco@gmail.com
#
# fecha creación: Agosto 2024
# fecha última modificación: Septiembre 2024
# ---------------------------
# Paquetes:
paquetes <- c("tidyverse", "dplyr", "plyr", "knitr", "haven", "readxl", "writexl", "Hmisc", "survey", "labelled", "archive")
#invisible(lapply(paquetes, install.packages, character.only = TRUE))
invisible(lapply(paquetes, library, character.only = TRUE))
# script: 5_analisis.R
#
# objetivo: Validar el total de vacantes no llenadas
#
# autora: antoniaaguileracarrasco@gmail.com
#
# fecha creación: Agosto 2024
# fecha última modificación: Septiembre 2024
# ---------------------------
# Paquetes:
pacman::p_load("tidyverse", "dplyr", "plyr", "knitr", "haven", "readxl", "writexl", "Hmisc", "survey", "labelled", "archive")
# script: 5_analisis.R
#
# objetivo: Validar el total de vacantes no llenadas
#
# autora: antoniaaguileracarrasco@gmail.com
#
# fecha creación: Agosto 2024
# fecha última modificación: Septiembre 2024
# ---------------------------
# Paquetes:
pacman::p_load("tidyverse", "dplyr", "plyr", "knitr", "haven", "readxl", "writexl", "Hmisc", "survey", "labelled", "archive")
# ---------------------------------------------------------------------------------- #
# ------------------------------------ PREÁMBULO ----------------------------------- #
# ---------------------------------------------------------------------------------- #
region <- seq(1,16)
# cargar enadel
enadel_wide  <- read_dta("datos/enadel_wide.dta") |> subset(region_trab%in%region) |>
mutate(empresas = 1,
estrato_cm = as.integer(interaction(p6, a2, tam_val)),
estrato_rt = as.integer(interaction(region_trab, a2, tam_val)))
enadel_long  <- read_dta("datos enadel_long.dta") |> subset(region_trab%in%region) |>
mutate(oficios = 1,
licencia = tolower(licencia),
certificado = tolower(certificado),
requisito = tolower(requisito),
estrato_cm = as.integer(interaction(p6, a2, tam_val)),
estrato_rt = as.integer(interaction(region_trab, a2, tam_val)),
exp_cat = ifelse(exp>1,1,exp))
enadel_long  <- read_dta("datos/enadel_long.dta") |> subset(region_trab%in%region) |>
mutate(oficios = 1,
licencia = tolower(licencia),
certificado = tolower(certificado),
requisito = tolower(requisito),
estrato_cm = as.integer(interaction(p6, a2, tam_val)),
estrato_rt = as.integer(interaction(region_trab, a2, tam_val)),
exp_cat = ifelse(exp>1,1,exp))
saveRDS(enadel_wide, file = "datos/enadel_wide.rds")
saveRDS(enadel_long, file = "datos/enadel_long.rds")
enadel_wide <- readr::read_rds("Datos/enadel_wide.rds")
# script: 5_analisis.R
#
# objetivo: Validar el total de vacantes no llenadas
#
# autora: antoniaaguileracarrasco@gmail.com
#
# fecha creación: Agosto 2024
# fecha última modificación: Septiembre 2024
# ---------------------------
# Paquetes:
pacman::p_load("tidyverse", "dplyr", "plyr", "knitr", "haven", "readxl", "writexl", "Hmisc", "survey", "labelled", "archive")
enadel_long <- readr::read_rds("Datos/enadel_long.rds")
# svy
options(survey.lonely.psu="adjust")
design_wide <- svydesign(ids = ~folio, strata = ~estrato_cm, weights = ~fact_emp, data = enadel_wide, nest = TRUE)
design_long_tot <- svydesign(ids = ~folio, strata = ~estrato_cm, weights = ~fact_emp, data = enadel_long, nest = TRUE)
design_t5   <- subset(design_long_tot, tipo_cat == 5)
design_t6   <- subset(design_long_tot, tipo_cat == 6)
design_long <- subset(design_long_tot, tipo_cat%in%c(1, 2, 3, 4))
# ---------------------------------------------------------------------------------- #
# -------------------------------------- STATS ------------------------------------- #
# ---------------------------------------------------------------------------------- #
# ----------------------- CARACTERIZACIÓN GENERAL DE LA BBDD ----------------------- #
{
# --- cuadro resumen
# cantidad de empresas
tot_folios <- svytotal(~empresas, design_wide, na.rm = TRUE)[1]
tot_folios_muestra <- length(unique(enadel_wide$folio)) # 5820 empresas
# total trabajadores
tot_trab <- svytotal(~trabval, design_wide, na.rm = TRUE)[1]
tot_trab_muestra <- sum(enadel_wide$trabval)
# empresas por sector
folios_sector <- svyby(~empresas, ~sector, design_wide, svytotal, na.rm = TRUE)[1:2]
folios_sector_muestra <- enadel_wide |> group_by(sector) |>
dplyr::summarise(tot_folios = n())
# trabajadores por sector
trab_sector <- svyby(~trabval, ~sector, design_wide, svytotal, na.rm = TRUE)[1:2]
trab_sector_muestra <- enadel_wide |> group_by(sector) |>
dplyr::summarise(tot_trab = sum(trabval))
cuadro_resumen <- data.frame(tipo = c(folios_sector$sector, "Total"),
empresas_muestra = c(folios_sector_muestra$tot_folios, tot_trab),
empresas_expandidos = c(folios_sector$empresas, tot_folios),
trab_muestra = c(trab_sector_muestra$tot_trab, tot_trab_muestra),
trab_expandidos = c(trab_sector$trabval, tot_trab))
# --- % por region
# empresas por region
folios_region <- svyby(~empresas, ~region_trab, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por region
trab_region <- svyby(~trabval, ~region_trab, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_region <- data.frame (region =  names(attr(folios_region$region_trab, "labels")),
empresas = folios_region$empresas,
trabajadores = trab_region$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores))
# --- % por tamaño
# empresas por tamaño
tam_tot <- svyby(~empresas, ~tam_val, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por tamaño
tam_trab_tot <- svyby(~trabval, ~tam_val, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_tam <- data.frame (tam_val = tam_tot$tam_val,
empresas = tam_tot$empresas,
trabajadores = tam_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores),
tam_label = case_when(tam_val == 2 ~ "Pequeña",
tam_val == 3 ~ "Mediana",
tam_val == 4 ~ "Grande")) |>
select(tam_label, empresas, trabajadores, pc_empresas, pc_trabajadores)
# --- % por tamaño de ventas
# empresas por tamaño
tamvent_tot <- svyby(~empresas, ~tam_vent, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por tamaño
tamvent_trab_tot <- svyby(~trabval, ~tam_vent, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_tamvent <- data.frame (tam_vent = val_labels(tamvent_tot$tam_vent),
empresas = tamvent_tot$empresas,
trabajadores = tamvent_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores)) |>
select(tam_vent, empresas, trabajadores, pc_empresas, pc_trabajadores)
# --- % por sector
# empresas por sector
acteco_tot <- svyby(~empresas, ~a2, design_wide, svytotal, na.rm = TRUE)[1:2]
# trabajadores por sector
acteco_trab_tot <- svyby(~trabval, ~a2, design_wide, svytotal, na.rm = TRUE)[1:2]
pc_acteco <- data.frame (act_eco = names(attr(acteco_tot$a2, "labels")[1:13]),
empresas = acteco_tot$empresas,
trabajadores = acteco_trab_tot$trabval) |>
mutate(pc_empresas = empresas/sum(empresas),
pc_trabajadores = trabajadores/sum(trabajadores)) |>
select(act_eco, empresas, trabajadores, pc_empresas, pc_trabajadores)
}
pc_region
